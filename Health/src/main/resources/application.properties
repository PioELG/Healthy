spring.datasource.url=jdbc:mysql://localhost:3306/health?createDatabaseIfNotExist=true
spring.datasource.username=root
spring.datasource.password:
spring.datasource.driver-class-name=com.mysql.jdbc.Driver

spring.jpa.database=MYSQL
spring.jpa.show-sql=true

spring.jpa.hibernate.ddl-auto=update

keycloak.auth-server-url=http://localhost:8180/auth
keycloak.realm=realm
keycloak.resource=health-backend
keycloak.credentials.secret=dcDgZf7pxEjBRWQYi3Ph7N4cgXITFomY

spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8180/realms/realm
spring.security.oauth2.resourceserver.jwt.set-uri=${spring.security.oauth2.ressourceserver.jwt.issuer-uri}/protocol/openid-connect/certs

# Activer la configuration CORS
spring.web.cors.enabled=true

# Autoriser toutes les origines (peut être risqué en production, utilisez-le avec précaution)
spring.web.cors.allowed-origins=*

# Autoriser toutes les méthodes HTTP (GET, POST, PUT, DELETE, etc.)
spring.web.cors.allowed-methods=*

# Autoriser tous les en-têtes
spring.web.cors.allowed-headers=*

# Autoriser les cookies dans les requêtes CORS (true/false)
spring.web.cors.allow-credentials=true

spring.web.cors.cors-configuration=/**

spring.mail.host=sandbox.smtp.mailtrap.io
spring.mail.port=587
spring.mail.username=4dc8c83788dc33
spring.mail.password=39f86f5884d668
spring.mail.properties.mail.smtp.auth=true

spring.thymeleaf.enabled=true


